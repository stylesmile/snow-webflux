<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.snow.quartz.mapper.SysJobMapper">

	<resultMap type="SysJob" id="SysJobResult">
		<id property="jobId" column="job_id"/>
		<result property="jobName" column="job_name"/>
		<result property="jobGroup" column="job_group"/>
		<result property="invokeTarget" column="invoke_target"/>
		<result property="cronExpression" column="cron_expression"/>
		<result property="misfirePolicy" column="misfire_policy"/>
		<result property="concurrent" column="concurrent"/>
		<result property="status" column="status"/>
		<result property="createBy" column="create_by"/>
		<result property="createTime" column="create_time"/>
		<result property="updateBy" column="update_by"/>
		<result property="updateTime" column="update_time"/>
		<result property="remark" column="remark"/>
	</resultMap>

	<sql id="selectJobVo">
		select job_id, job_name, job_group, invoke_target, cron_expression, misfire_policy, concurrent, status,
		create_by, create_time, remark
		from sys_job
	</sql>

	<sql id="countVo">
		select count(0)
		from sys_job
	</sql>

	<!-- 查询条件 -->
	<sql id="sqlWhereQuery">
		<where>
			<if test="jobName != null and jobName != ''">
				AND job_name like concat('%', #{jobName}, '%')
			</if>
			<if test="jobGroup != null and jobGroup != ''">
				AND job_group = #{jobGroup}
			</if>
			<if test="status != null and status != ''">
				AND status = #{status}
			</if>
			<if test="invokeTarget != null and invokeTarget != ''">
				AND invoke_target like concat('%', #{invokeTarget}, '%')
			</if>
		</where>
	</sql>

	<!-- 分页条件 -->
	<sql id="sqlLimit">
		<if test="pagingSql != null and pagingSql !=''">${pagingSql}</if>
	</sql>

	<select id="countList" parameterType="SysJob" resultType="long">
		<include refid="countVo"/>
		<include refid="sqlWhereQuery"/>
	</select>

	<select id="selectList" parameterType="SysJob" resultMap="SysJobResult">
		<include refid="selectJobVo"/>
		<include refid="sqlWhereQuery"/>
		<include refid="sqlLimit"/>
	</select>

	<select id="selectJobAll" resultMap="SysJobResult">
		<include refid="selectJobVo"/>
	</select>

	<select id="selectById" parameterType="Long" resultMap="SysJobResult">
		<include refid="selectJobVo"/>
		where job_id = #{jobId}
	</select>

	<delete id="deleteById" parameterType="Long">
		delete from sys_job where job_id = #{jobId}
	</delete>

	<delete id="deleteByIds" parameterType="Long">
		delete from sys_job where job_id in
		<foreach collection="array" item="jobId" open="(" separator="," close=")">
			#{jobId}
		</foreach>
	</delete>

	<update id="update" parameterType="SysJob">
		update sys_job
		<set>
			<if test="jobName != null and jobName != ''">job_name = #{jobName},</if>
			<if test="jobGroup != null and jobGroup != ''">job_group = #{jobGroup},</if>
			<if test="invokeTarget != null and invokeTarget != ''">invoke_target = #{invokeTarget},</if>
			<if test="cronExpression != null and cronExpression != ''">cron_expression = #{cronExpression},</if>
			<if test="misfirePolicy != null and misfirePolicy != ''">misfire_policy = #{misfirePolicy},</if>
			<if test="concurrent != null and concurrent != ''">concurrent = #{concurrent},</if>
			<if test="status !=null">status = #{status},</if>
			<if test="remark != null and remark != ''">remark = #{remark},</if>
			<if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
			update_time = sysdate()
		</set>
		where job_id = #{jobId}
	</update>

	<insert id="insert" parameterType="SysJob" useGeneratedKeys="true" keyProperty="jobId" keyColumn="job_id">
		insert into sys_job(
		<if test="jobId != null and jobId != 0">job_id,</if>
		<if test="jobName != null and jobName != ''">job_name,</if>
		<if test="jobGroup != null and jobGroup != ''">job_group,</if>
		<if test="invokeTarget != null and invokeTarget != ''">invoke_target,</if>
		<if test="cronExpression != null and cronExpression != ''">cron_expression,</if>
		<if test="misfirePolicy != null and misfirePolicy != ''">misfire_policy,</if>
		<if test="concurrent != null and concurrent != ''">concurrent,</if>
		<if test="status != null and status != ''">status,</if>
		<if test="remark != null and remark != ''">remark,</if>
		<if test="createBy != null and createBy != ''">create_by,</if>
		create_time
		)values(
		<if test="jobId != null and jobId != 0">#{jobId},</if>
		<if test="jobName != null and jobName != ''">#{jobName},</if>
		<if test="jobGroup != null and jobGroup != ''">#{jobGroup},</if>
		<if test="invokeTarget != null and invokeTarget != ''">#{invokeTarget},</if>
		<if test="cronExpression != null and cronExpression != ''">#{cronExpression},</if>
		<if test="misfirePolicy != null and misfirePolicy != ''">#{misfirePolicy},</if>
		<if test="concurrent != null and concurrent != ''">#{concurrent},</if>
		<if test="status != null and status != ''">#{status},</if>
		<if test="remark != null and remark != ''">#{remark},</if>
		<if test="createBy != null and createBy != ''">#{createBy},</if>
		sysdate()
		)
	</insert>

</mapper> 